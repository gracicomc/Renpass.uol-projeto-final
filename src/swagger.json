{
    "openapi": "3.0.1",
    "info": {
        "title": "Renpass.UOL",
        "description": "API for renting luxury and semi-luxury cars",
        "contact": {
            "email": "graciparentte@gmail.com"
        },
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://localhost:3000/api/v1",
            "description": "API server"
        }
    ],
    "paths": {
        "/car/": {
            "post": {
                "summary": "Create a car",
                "description": "Create a car",
                "tags": ["Cars"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/components/schemas/CarSchema"
                            },
                            "examples": {
                                "car": {
                                    "value": {
                                        
                                        "model": "S10 3.0",
                                        "type": "sedan",
                                        "brand": "GM",
                                        "color": "azul",
                                        "year": "2022",
                                        "accessories": [
                                            {
                                                "description": "Ar-condicionado"
                                            },
                                            {
                                                "description": "Dir. Hidráulica"
                                            },
                                            {
                                                "description": "Câmbio Automático"
                                            },
                                            {
                                                "description": "Teto Solar"
                                            }
                                            ],
                                        "passengersQtd": 5            
                                    }
                                }
                            }
                        }
                    }                  
                },
                "responses": {
                    "400": {
                        "description": "Bad request"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/CarSchema"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List all cars",
                "description": "List all cars",
                "tags": ["Cars"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CarSchema"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/car/{id}": {
            "get": {
                "summary": "Get a car by id",
                "description": "Get a car by id",
                "tags": ["Cars"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "patch": {
                "summary": "Update a car by id",
                "description": "Update a car by id",
                "tags": ["Cars"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/components/schemas/CarSchema"
                            },
                            "examples": {
                                "car": {
                                    "value": {
                                        
                                        "model": "S10 3.0",
                                        "type": "sedan",
                                        "brand": "GM",
                                        "color": "vermelho",
                                        "year": "2020",
                                        "accessories": [
                                            {
                                                "description": "Quatro Portas"
                                            },
                                            {
                                                "description": "Dir. Hidráulica"
                                            },
                                            {
                                                "description": "Câmbio Manual"
                                            }
                                            ],
                                        "passengersQtd": 4            
                                    }
                                }
                            }
                        }
                    }                  
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a car by id",
                "description": "Delete a car by id",
                "tags": ["Cars"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/person/": {
            "post": {
                "summary": "Create a person",
                "description": "Create a person",
                "tags": ["Person"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/components/schemas/PersonSchema"
                            },
                            "examples": {
                                "car": {
                                    "value": {
                                        "name": "João",
                                        "cpf": "504.527.140-79",
                                        "birthDay": "20/08/1998",
                                        "email": "joao@email.com",
                                        "password": "123456",
                                        "canDrive": "yes"    
                                    }
                                }
                            }
                        }
                    }                  
                },
                "responses": {
                    "400": {
                        "description": "Bad request"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/PersonSchema"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List all people",
                "description": "List all people",
                "tags": ["Person"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonSchema"
                                    }
                                }
                            }
                        }
                    }
                }
            }   
        },
        "/person/{id}": {
            "get": {
                "summary": "Get a person by id",
                "description": "Get a person by id",
                "tags": ["Person"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Person id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "patch": {
                "summary": "Update a person by id",
                "description": "Update a person by id",
                "tags": ["Person"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Person id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/components/schemas/PersonSchema"
                            },
                            "examples": {
                                "car": {
                                    "value": {
                                        "name": "João Gomes",
                                        "cpf": "504.527.140-79",
                                        "birthDay": "20/08/1998",
                                        "email": "joao.gomes@email.com",
                                        "password": "654321",
                                        "canDrive": "yes"    
                                    }
                                }
                            }
                        }
                    }                  
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a person by id",
                "description": "Delete a person by id",
                "tags": ["Person"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Person id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/rental/": {
            "post": {
                "summary": "Create a rental",
                "description": "Create a rental",
                "tags": ["Rental"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/components/schemas/RentalSchema"
                            },
                            "examples": {
                                "car": {
                                    "value": {  
                                            "name": "Localiza Rent a Car",
                                            "cnpj": "08.366.064/0001-12",
                                            "activities": "Aluguel de Carros E Gestão de Frotas",
                                            "address": [
                                                {
                                                    "zipCode": "68459-020",
                                                    "number": "200",
                                                    "isFilial": true
                                                }
                                            ]  
                                    }
                                }
                            }
                        }
                    }                  
                },
                "responses": {
                    "400": {
                        "description": "Bad request"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/RentalSchema"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List all Rentals",
                "description": "List all Rentals",
                "tags": ["Rental"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RentalSchema"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rental/{id}": {
            "get": {
                "summary": "Get a Rental by id",
                "description": "Get a Rental by id",
                "tags": ["Rental"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Rental id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RentalSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "patch": {
                "summary": "Update a Rental by id",
                "description": "Update a Rental by id",
                "tags": ["Rental"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Rental id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/components/schemas/RentalSchema"
                            },
                            "examples": {
                                "car": {
                                    "value": {
                                        "name": "Localiza",
                                        "cnpj": "08.366.064/0001-12",
                                        "activities": "Aluguel de Carros E Gestão de Frotas",
                                        "address": [
                                            {
                                                "zipCode": "68459-020",
                                                "number": "230",
                                                "isFilial": true
                                            }
                                        ]            
                                    }
                                }
                            }
                        }
                    }                  
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RentalSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a Rental by id",
                "description": "Delete a Rental by id",
                "tags": ["Rental"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Rental id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CarSchema": {
                "type": "object",
                "properties": {
                    "model": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "year": {
                        "type": "number"
                    },
                    "accessories": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "passengersQtd": {
                        "type": "number"
                    },
                    "_id": {
                        "type": "string"
                    }
                }
            },
            "PersonSchema":{
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "cpf": {
                        "type": "string"

                    },
                   "birthDay": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "canDrive": {
                        "type": "string"
                    },
                    "_id": {
                        "type": "string"
                    }
                    }
            },
            "RentalSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "cnpj": {
                        "type": "string"
                    },
                    "activities": {
                        "type": "string"
                    },
                    "address": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "zipCode": {
                                    "type": "string"
                                },
                                "street": {
                                    "type": "string"
                                },
                                "number": {
                                    "type": "number"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "district": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "isFillial": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
